# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CICD Pipeline

on:
  push:
    branches: [master]

jobs:
  Setup:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDk 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: maven job
      run: mvn -B clean --file pom.xml
  Compile:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDk 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: maven job
      run: mvn -B compile --file pom.xml
  StaticAnalysis:
    runs-on: ubuntu-latest
    needs: Compile
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Sonarcloud Scan
      run: mvn -X org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      env:
         SONAR_TOKEN: ${{ secrets.SATOKEN }}
         GITHUB_TOKEN: ${{ secrets.GATOKEN }}

  UnitTesting:
    runs-on: ubuntu-latest
    needs: Compile
    permissions:
      contents: read
      packages: write
      checks: write
    steps:
    - run: echo should run unit Tests
    - uses: actions/checkout@v4 
    - name: UnitTesting with Maven
      run: mvn -B test --file pom.xml
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.9
      with:
          files: "target/surefire-reports/*.xml"
 
  CodeCoverage:
    runs-on: ubuntu-latest
    needs: UnitTesting
    steps:
    - run: echo should run unit Tests
    - uses: actions/checkout@v4 
    - name: UnitTesting with Maven
      run: mvn -X org.jacoco:jacoco-maven-plugin:report
  War:
    runs-on: ubuntu-latest
    needs: CodeCoverage
    steps:
    - uses: actions/checkout@v2
    - name: Maven build
      run: mvn -X war:war
    - name: Uplaod artifact
      uses: actions/upload-artifact@v4
      with:   
        name: webapp
        path: target/*.war
  # Deploy:
        
   
      











      
  # StaticAnalysis:
  #  runs-on: ubuntu-latest
  #  needs: Compile
  #  steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       fetch-depth: 0
  #   - name: Set up JDK
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #   - name: SonarCloud Scan
  #     run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SATOKEN }}
  #       GITHUB_TOKEN: ${{ secrets.GATOKEN }}
  # UnitTesting:
  #   runs-on: ubuntu-latest
  #   needs: Compile
  #   permissions:
  #     contents: read
  #     packages: write
  #     checks: write
  #   steps:
  #   - run: echo should run unit Tests
  #   - uses: actions/checkout@v4 
  #   - name: UnitTesting with Maven
  #     run: mvn -B test --file pom.xml
  #   - name: Publish Unit Test Results
  #     uses: EnricoMi/publish-unit-test-result-action@v1.9
  #     with:
  #         files: "target/surefire-reports/*.xml"
  # CodeCoverage:
  #   runs-on: ubuntu-latest
  #   needs: UnitTesting
  #   steps:
  #   - run: echo should run unit Tests
  #   - uses: actions/checkout@v4 
  #   - name: UnitTesting with Maven
  #     run: mvn -X org.jacoco:jacoco-maven-plugin:report
  # War:
  #   runs-on: ubuntu-latest
  #   needs: CodeCoverage
  #   steps:
  #   - uses: actions/checkout@v2
     
  #   - name: maven job
  #     run: mvn -X war:war
  #   - name: upload Artifact
  #     uses: actions/upload-artifact@v4
  #     with: 
  #       name: webapp
  #       path: target/*.war
  # Deploy:
  #   runs-on: ubuntu-latest
  #   needs: War
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '11'
  #       distribution: 'temurin'
  #       server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
  #       settings-path: ${{ github.workspace }} # location for the settings.xml file

  #   - name: Download artifact
  #     uses: actions/download-artifact@v4
  #     with: 
  #       name: webapp
  #       path: target/
  #   - name: Publish to GitHub Packages Apache Maven
  #     run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
  #     env:
  #       GITHUB_TOKEN: ${{ github.token }} 
  

  
    
    
  
      
    
      
      
    
  


  #   - name: Publish to GitHub Packages Apache Maven
  #     run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
  #     env:
  #       GITHUB_TOKEN: ${{ github.token }}
